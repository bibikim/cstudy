#include <stdio.h>
#include <stdlib.h>
#include <string.h>


/* 동적 메모리 2차원 배열 */

int main()
{
	int i, x, y;
	// int가 들어갈 수 있는 포인터 공간을 8 곱한 것만큼 만듦
	int** pptr = (int**)malloc(sizeof(int*) * 8);
	// 포인터 변수를 8개 만든다. 각각 하나하나가 모두 포인터 변수가 됨.
	// 하나하나의 포인터 변수는 int형 배열을 가질 수 있는 각각의 포인터가 만들어진 것
	// 그리고 그 각각의 포인터가 어떠한 배열을 가리키는 포인터 변수가 된 것

	// 포인터 변수 초기화
	for (i = 0; i < 8; i++)
	{ 
		*(pptr + i) = (int *)malloc(sizeof(int) * 6);
		// 각각의 포인터 변수는 이제 6개만큼의 위치(int형 공간)를 포함하고 있는 배열의 첫번째 포인터 값을 가리키게 됨

	}
	// ------> 총 48개만큼의 int형 2차원 배열 공간을 만들어준 것!

	// 할당 받은거 처리하기(초기화)
	for (y = 0; y < 8; y++)
	{
		for (x = 0; x < 6; x++)
		{
			*(*(pptr + y) + x) = 6 * y + (x + 1);
			// x는 작은 공간 하나하나(6개) -> 6이 되면 y로 넘어가고 또 x가 6이 되면 y로 넘어가고... 8번 반복
		}
	}

	// 출력하기
	for (y = 0; y < 8; y++)
	{
		for (x = 0; x < 6; x++)
		{
			printf("%3d ", *(*(pptr + y) + x));
		}
		printf("\n");   // x가 6만큼 작동 될 때마다 줄바꿈
	}

	for (y = 0; y < 8; y++)
	{
		free(*(pptr + y));  // 6개의 크기에 해당하는 배열들이 8개만큼 모두 할당 해제
	}


	return 0;
}