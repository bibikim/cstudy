#include <stdio.h>
#include <stdlib.h>



/* 동적 메모리 */

// 동적 메모리 할당이란, 프로그램 실행 도중에 동적으로 메모리를 할당 받는 것
// 프로그램에는 필요한 만큼의 메모리를 시스템으로부터 할당을 받아 사용하고
// 사용이 끝나면 시스템에 메모리를 반납
// 필요한 만큼만 할당 받고 또 필요한 때에 사용하고 반납해야 메모리를 효율적으로 사용할 수 있음
// malloc() 계열의 라이브러리 함수

// 동적 메모리의 사용이 끝나면 반드시 해당 메모리 여역을 명시적으로 반납해줘야 함.

int main()
{
	int *pi;    // Pointer Integer
	            // pi라는 변수 = 특정한 int형 변수의 위치(주소)를 기억하는 포인터 변수

	/* 메모리 할당하기->malloc() */
	pi = (int*)malloc(sizeof(int));   
	// -> int형의 크기(4byte)만큼 메모리를 할당해라.
	// 메모리를 할당한 후 그 부분의 주소를 가리키도록 int *로 형 변환을 해줌
	// pi라는 변수가 해당 위치를 기억할 수 있도록 해줌
	
	if(pi == NULL)
	{
		printf("동적 메모리 할당에 실패했습니다. \n");
		exit(1); // 프로그램 종료
	}
	*pi = 100;  // pi라는 포인터 변수가 가리키고 있는 주소값에 100을 넣어라!
	printf("%d\n", *pi);  // 100

	/* 동적 메모리 사용한 이후에는 무조건 해당 메모리를 반환한다. */
	free(pi); // pi가 가리키고 있는 메모리 주소의 메모리 할당을 해제
			  // 4byte만큼 할당받은 메모리를 반납

	return 0;
}